<% title t('.page_title') %>
<% decision_step_header %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= govuk_error_summary(@form_object) %>
    <h1 class="govuk-heading-l"><%= t('.heading', count: @form_object.application.work_items.count) %></h1>

    <%= govuk_button_to(t('.add_now'), edit_nsm_steps_work_item_path(current_application, work_item_id: Nsm::StartPage::NEW_RECORD), secondary: true) %>

    <%=
      head = {
        'line_item' => { html_attributes: { id: 'itemTitle' }, classes: 'govuk-!-width-one-zero' },
        'item' => {},
        'date' => {},
        'fee_earner' => { classes: 'govuk-!-width-one-zero' },
        'time' => { numeric: true, classes: 'govuk-!-width-one-zero' },
        **(@form_object.application.allow_uplift? ? { 'uplift' => { numeric: true, classes: 'govuk-!-width-one-zero' } } : {}),
        'action' => { numeric: true }
      }
      header_row = head.map.with_index do |(column_key, options), index|
        if column_key == 'action'
          {
            text: t(column_key, scope: "nsm.steps.view_claim.work_items"),
            **options
          }
        else
          aria_sort, next_direction = sort_variable(column_key, @sort_by, @sort_direction)

          {
            text: reorder_form(work_items_nsm_steps_view_claim_path(current_application), column_key, next_direction, "nsm.steps.view_claim.work_items", index),
            **options.deep_merge(html_attributes: { 'aria-sort': aria_sort})
          }
        end
      end

      rows = @work_items.map do |work_item|
        item_with_link = link_to(
                           t("summary.nsm/cost_summary/work_items.#{work_item.work_type.to_s}"),
                           edit_nsm_steps_work_item_path(@form_object.application, work_item_id: work_item.id),
                           data: { turbo: 'false' },
                           'aria-labelledby': "itemTitle item#{work_item.position} workType#{work_item.position}",
                           id: "workType#{work_item.position}"
                         )

        action_links =
          tag.uk(class: 'govuk-summary-list__actions-list') do
            tag.li(class: "govuk-summary-list__actions-list-item") do
              link_to(
                t('.duplicate'),
                duplicate_nsm_steps_work_item_path(@form_object.application, work_item_id: work_item.id),
                data: { turbo: 'false' },
                'aria-labelledby': "duplicate#{work_item.position} itemTitle item#{work_item.position} workType#{work_item.position}",
                id: "duplicate#{work_item.position}"
              )
            end +
            tag.li(class: "govuk-summary-list__actions-list-item") do
              link_to(
                t('.delete'),
                edit_nsm_steps_work_item_delete_path(@form_object.application, work_item_id: work_item.id),
                data: { turbo: 'false' },
                'aria-labelledby': "delete#{work_item.position} itemTitle item#{work_item.position} workType#{work_item.position}",
                id: "workType#{work_item.position}"
              )
            end
          end

        [
          { header: true, text: work_item.position, numeric: false, html_attributes: { id: "item#{work_item.position}" } },
          { header: true, text: item_with_link, numeric: false},
          { text: work_item.completed_on&.to_fs(:short_stamp), numeric: false},
          { text: work_item.fee_earner, numeric: false},
          { text: format_period(work_item.time_spent, style: :minimal_html), numeric: true },
          ({ text: NumberTo.percentage(work_item.uplift.to_f, multiplier: 1), numeric: true } if @form_object.application.allow_uplift?),
          { text: action_links, numeric: true }
        ].compact
      end

      govuk_table_with_cell(header_row, rows, caption: { text: t('.accessibility.work_items_caption'), html_attributes: { 'class': 'govuk-visually-hidden'} })
    %>

    <%= step_form @form_object do |f| %>
      <% if @form_object.all_work_items_valid? %>
        <%= f.govuk_radio_buttons_fieldset :add_another, legend: { text: t('.add_another'), size: 'm' } do %>
          <%= f.govuk_radio_button :add_another, YesNoAnswer::YES.to_s %>
          <%= f.govuk_radio_button :add_another, YesNoAnswer::NO.to_s %>
        <% end %>
      <% end %>

      <%= f.continue_button %>
    <% end %>
  </div>
</div>
